# Изменяемый список заметок для пользователя

from datetime import datetime, date

notes = [] # Список заметок

# Запрос данных от пользователя для ввода
print('Добро пожаловать в "Менеджер заметок"! Вы можете добавить новую заметку. \n')
create_new_note = (input('Создайте новую заметку (да/другой символ - нет)? '))

while create_new_note.strip() == 'да': # Удаление пробелов
    note = {} # Список для заметок

    # Проверка ввода имени
    while True: # Цикл проверки
        note["Имя"] = input("Введите имя пользователя (поле 'Имя' не должно оставаться пустым): ")
        if note['Имя'].strip() == "": # Проверка ввода и удаление пробелов
            print("Имя не может быть пустым, повторите ввод")
        else:
            break # Выход из цикла

    # Проверка формата заголовков
    while True: # Цикл проверки
        note["Заголовок"] = input("Введите заголовок заметки (поле 'Заголовок' не должно оставаться пустым): ")
        if note["Заголовок"].strip() == "": # Проверка ввода и удаление пробелов
            print("Заголовок не должен оставаться пустым, повторите ввод.")
        else:
            break # Выход из цикла

    # Проверка формата описания
    while True: # Цикл проверки
        note["Описание"] = input("Введите описание заметки (поле 'Описание' не должно оставаться пустым): ")
        if note["Описание"].strip() == "": # Проверка ввода и удаление пробелов
            print("Описание не должно остваться пустым, повторите ввод. ")
        else:
            break # Выход изи цикла

    # Проверка формата статус
    status = ['новая', 'в процессе', 'выполненно'] # Доступные значения для заметки
    while True: # Цикл проверки
        note["Статус"] = input("Введите статус заметки ( новая, в процессе, выполненно): ")
        if note["Статус"].strip() in status: # Проверка статуса и удаление пробелов
            break # Выход из цикла
        else:
            print("Статус не существует, введите предложенный статус") # Запрос предложенного статуса

    # Проверка формата даты заметки
    while True: # Цикл проверки
        try:
            note["Дата создания"] = input("Введите дату создания заметки в формате 'день-месяц-год': ")
            datetime.strptime(note["Дата создания"], "%d-%m-%Y") # Когда дата создания и формат не совпадают,
            # возникает ошибка

            break # Выход из цикла
        except ValueError: # Обработка ошибки
            print("Дата некорректна, повторите ввод даты создания заметки в требуемом формате")

    # Проверка формата дедлайн
    while True: # Цикл проверки
        try:
            note["Дедлайн"] = input("Введите дату дедлайна в формате 'день-месяц-год': ")
            datetime.strptime(note["Дедлайн"], "%d-%m-%Y") # Когда строка дедлайн и формат не совпадают,
            # возникает ошибка

            break # Выход из цикла
        except ValueError: # Обработка ошибки
            print("Дата дедлайна неккоректна, повторите ввод дедлайна в требуемом формате")
    notes.append(note)
    create_new_note = (input('создать новую заметку (да/нет)? '))
print('\Ввод заметок завершен.')
print(f"Введено заметок - {len(notes)}.")

# Вывод заметок пользователя на экран
print("\nсписок заметок")
for a in range(len(notes)):
    print(f"\nзаметка № {a+1}: ")
    for key, value in notes[a].items():
             print(key, "-", value)






    



